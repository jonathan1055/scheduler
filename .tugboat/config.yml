services:
  php:
    image: q0rban/tugboat-drupal:9.0
    default: true
    http: false
    depends: mysql
    commands:
      update: |
        set -eux
        # Check out a branch using the unique Tugboat ID for this repository, to
        # ensure we don't clobber an existing branch.
        git checkout -b $TUGBOAT_REPO_ID
        # Composer is hungry. You need a Tugboat project with a pretty sizeable
        # chunk of memory.
        export COMPOSER_MEMORY_LIMIT=-1
        # This is an environment variable we added in the Dockerfile that
        # provides the path to Drupal composer root (not the web root).
        cd $DRUPAL_COMPOSER_ROOT
        # We configure the Drupal project to use the checkout of the module as a
        # Composer package repository.
        composer config repositories.tugboat vcs $TUGBOAT_ROOT
        # Now we can require this module, specifing the branch name we created
        # above that uses the $TUGBOAT_REPO_ID environment variable.
        composer require drupal/scheduler:dev-$TUGBOAT_REPO_ID --dev
        composer require drupal/devel_generate
        # Install Drupal on the site.
        vendor/bin/drush \
          --yes \
          --db-url=mysql://tugboat:tugboat@mysql:3306/tugboat \
          --site-name="Scheduler issue ${TUGBOAT_PREVIEW_NAME}" \
          --account-pass=admin \
          site:install standard
        # Set up the files directory permissions.
        mkdir -p $DRUPAL_DOCROOT/sites/default/files
        chgrp -R www-data $DRUPAL_DOCROOT/sites/default/files
        chmod 2775 $DRUPAL_DOCROOT/sites/default/files
        chmod -R g+w $DRUPAL_DOCROOT/sites/default/files

        # Enable modules.
        vendor/bin/drush --yes pm:enable scheduler devel devel_generate
        vendor/bin/drush --yes pm:enable media
        composer show drupal/scheduler | egrep 'name |vers'
        vendor/bin/drush pml | grep scheduler
        composer show drupal/devel | egrep 'name |vers'
        vendor/bin/drush pml | grep devel

        # Scheduler general settings
        vendor/bin/drush config-set scheduler.settings allow_date_only 1 -y
        vendor/bin/drush config-set scheduler.settings default_time '22:06:00' -y
        vendor/bin/drush config-get scheduler.settings
        # Scheduler content settings
        vendor/bin/drush -y config-set node.type.article third_party_settings.scheduler.publish_enable 1
        vendor/bin/drush -y config-set node.type.article third_party_settings.scheduler.unpublish_enable 1
        vendor/bin/drush -y config-set node.type.article third_party_settings.scheduler.expand_fieldset 'always'
        vendor/bin/drush -y config-set node.type.article third_party_settings.scheduler.fields_display_mode 'fieldset'
        vendor/bin/drush -y config-set node.type.article third_party_settings.scheduler.publish_past_date 'schedule'
        vendor/bin/drush config-get node.type.article third_party_settings

        # Scheduler media settings.
        vendor/bin/drush -y config-set media.type.image third_party_settings.scheduler.publish_enable 1
        vendor/bin/drush -y config-set media.type.image third_party_settings.scheduler.unpublish_enable 1
        vendor/bin/drush -y config-set media.type.image third_party_settings.scheduler.expand_fieldset 'always'
        vendor/bin/drush -y config-set media.type.image third_party_settings.scheduler.fields_display_mode 'fieldset'
        vendor/bin/drush -y config-set media.type.image third_party_settings.scheduler.publish_past_date 'schedule'
        vendor/bin/drush config-get media.type.image third_party_settings
 
        # Media settings.
        vendor/bin/drush -y config-set media.settings standalone_url 1
        vendor/bin/drush config-get media.settings
        vendor/bin/drush -y config-set field.field.media.image.field_media_image required 0
        vendor/bin/drush config-get field.field.media.image.field_media_image

        # Create roles for each of the scheduler user permissions.
        vendor/bin/drush role-create 'content_editor' 'Content Editor'
        vendor/bin/drush role-add-perm 'content_editor' 'schedule publishing of nodes'
        vendor/bin/drush role-create 'content_viewer' 'Content Viewer'
        vendor/bin/drush role-add-perm 'content_viewer' 'view scheduled content'
        vendor/bin/drush role-create 'media_editor' 'Media Editor'
        vendor/bin/drush role-add-perm 'media_editor' 'schedule publishing of media'
        vendor/bin/drush role-create 'media_viewer' 'Media Viewer'
        vendor/bin/drush role-add-perm 'media_viewer' 'view scheduled media'
        # Add some permissions for all authenticated users.
        vendor/bin/drush role-add-perm 'authenticated' "create article content, edit any article content, delete any article content, access content overview, view own unpublished content, switch users"
        vendor/bin/drush role-add-perm 'authenticated' "create image media, edit any image media, delete any image media, access media overview, view own unpublished media"

        # Create users.
        vendor/bin/drush user-create 'Eddy the content editor'
        vendor/bin/drush user-add-role 'content_editor' 'Eddy the content editor'
        vendor/bin/drush user-create 'Vera the content viewer'
        vendor/bin/drush user-add-role 'content_viewer' 'Vera the content viewer'
        vendor/bin/drush user-create 'Madeline the media editor'
        vendor/bin/drush user-add-role 'media_editor' 'Madeline the media editor'
        vendor/bin/drush user-create 'Marvin the media viewer'
        vendor/bin/drush user-add-role 'media_editor' 'Marvin the media viewer'

        # Generate content.
        vendor/bin/drush devel-generate-content 2 --bundles=article --authors=1,2 --verbose
        vendor/bin/drush devel-generate-media 2 --media-types=image --verbose

        # @todo Place the 'Switch users' block in first sidebar.

      build: |
        set -eux
        # Delete and re-check out this branch in case this is built from a Base Preview.
        git branch -D $TUGBOAT_REPO_ID && git checkout -b $TUGBOAT_REPO_ID || true
        export COMPOSER_MEMORY_LIMIT=-1
        cd $DRUPAL_COMPOSER_ROOT
        composer install --optimize-autoloader
        # Update this module, including all dependencies.
        composer update drupal/scheduler --with-all-dependencies
        vendor/bin/drush --yes updb
        vendor/bin/drush cache:rebuild
  mysql:
    image: tugboatqa/mariadb
